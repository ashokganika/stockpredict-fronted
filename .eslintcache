[{"/home/ashok/Desktop/project7/seven/src/index.js":"1","/home/ashok/Desktop/project7/seven/src/App.js":"2","/home/ashok/Desktop/project7/seven/src/reportWebVitals.js":"3","/home/ashok/Desktop/project7/seven/src/component/header/header.js":"4","/home/ashok/Desktop/project7/seven/src/component/home/home.js":"5","/home/ashok/Desktop/project7/seven/src/component/table/table.js":"6","/home/ashok/Desktop/project7/seven/src/component/login/login.js":"7","/home/ashok/Desktop/project7/seven/src/component/footer/footer.js":"8","/home/ashok/Desktop/project7/seven/src/component/register/register.js":"9","/home/ashok/Desktop/project7/seven/src/component/viewstock/viewstock.js":"10","/home/ashok/Desktop/project7/seven/src/component/notification/notification.js":"11","/home/ashok/Desktop/project7/seven/src/utils/stockdata.js":"12","/home/ashok/Desktop/project7/seven/src/component/pagenotfound/pagenotfound.js":"13","/home/ashok/Desktop/project7/seven/src/component/predictedStock/predictedStock.js":"14","/home/ashok/Desktop/project7/seven/src/utils/loader.js":"15","/home/ashok/Desktop/project7/seven/src/utils/apiHooks.js":"16"},{"size":500,"mtime":1611907386918,"results":"17","hashOfConfig":"18"},{"size":1659,"mtime":1612847010708,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1611907386918,"results":"20","hashOfConfig":"18"},{"size":2617,"mtime":1613119239969,"results":"21","hashOfConfig":"18"},{"size":745,"mtime":1618068820357,"results":"22","hashOfConfig":"18"},{"size":781,"mtime":1612325082116,"results":"23","hashOfConfig":"18"},{"size":4654,"mtime":1613110455961,"results":"24","hashOfConfig":"18"},{"size":305,"mtime":1613234777449,"results":"25","hashOfConfig":"18"},{"size":5849,"mtime":1612846492670,"results":"26","hashOfConfig":"18"},{"size":2932,"mtime":1613120517411,"results":"27","hashOfConfig":"18"},{"size":739,"mtime":1613125963796,"results":"28","hashOfConfig":"18"},{"size":8308,"mtime":1612514369522,"results":"29","hashOfConfig":"18"},{"size":159,"mtime":1612496785129,"results":"30","hashOfConfig":"18"},{"size":3073,"mtime":1617970063853,"results":"31","hashOfConfig":"18"},{"size":268,"mtime":1617967388389,"results":"32","hashOfConfig":"18"},{"size":586,"mtime":1612852300172,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"ixeoyn",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"/home/ashok/Desktop/project7/seven/src/index.js",[],["72","73"],"/home/ashok/Desktop/project7/seven/src/App.js",[],"/home/ashok/Desktop/project7/seven/src/reportWebVitals.js",[],"/home/ashok/Desktop/project7/seven/src/component/header/header.js",["74","75","76"],"import React, { useEffect, useState } from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport \"./nav.css\";\n\nfunction Header(props) {\n  const [token, settoken] = useState(\"\");\n  const [user, setuser] = useState(\"\");\n  useEffect(() => {\n    const token =\n      localStorage.getItem(\"token\") && localStorage.getItem(\"token\");\n    const name =\n      localStorage.getItem(\"user\") && JSON.parse(localStorage.getItem(\"user\"));\n    settoken(token);\n    setuser(name);\n  }, [token, user]);\n\n  const handleLogout = (e) => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"role\");\n\n    console.log(\"props\", props);\n    settoken(\"\");\n    setuser(\"\");\n    props.history.push(\"/login\");\n  };\n\n  const auth = token ? (\n    <div className=\"authcontainer\">\n      <li className=\"nav-item authbtn\">\n        <div className=\"nav-link btn btn-outline-info user\">{user}</div>\n      </li>\n\n      <li className=\"nav-item authbtn\">\n        <div className=\"nav-link btn btn-outline-info\" onClick={handleLogout}>\n          Logout\n        </div>\n      </li>\n    </div>\n  ) : (\n    <div className=\"authcontainer\">\n      <li className=\"nav-item authbtn\">\n        <NavLink className=\"nav-link btn btn-outline-info\" to=\"/register\">\n          Sign Up\n        </NavLink>\n      </li>\n\n      <li className=\"nav-item authbtn\">\n        <NavLink className=\"nav-link btn btn-outline-info\" to=\"/login\">\n          Log In\n        </NavLink>\n      </li>\n    </div>\n  );\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-white bg-dark \">\n      <NavLink to=\"/\">\n        <a className=\"navbar-brand logo\" id=\"nav-logo\">\n          StockPredict\n        </a>\n      </NavLink>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item active navitem\">\n            <NavLink to=\"/\">\n              <a className=\"nav-link\">Home</a>\n            </NavLink>\n          </li>\n          <li className=\"nav-item navitem \">\n            <NavLink to=\"/view-stock\">\n              <a className=\"nav-link\">View Stock</a>\n            </NavLink>\n          </li>\n          {auth}\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default withRouter(Header);\n","/home/ashok/Desktop/project7/seven/src/component/home/home.js",[],"/home/ashok/Desktop/project7/seven/src/component/table/table.js",[],["77","78"],"/home/ashok/Desktop/project7/seven/src/component/login/login.js",["79","80"],"import React from \"react\";\nimport axios from \"axios\";\nimport \"./login.css\";\nimport notification from \"../notification/notification\";\nimport Header from \"../header/header\";\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        email: \"\",\n\n        password: \"\",\n      },\n      error: {\n        email: {\n          msg: \"\",\n          isDirty: false,\n        },\n        password: {\n          msg: \"\",\n          isDirty: false,\n        },\n      },\n      isSubmitting: false,\n      isValidForm: false,\n    };\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    // console.log(name, value);\n    this.setState(\n      (previousState) => ({\n        data: {\n          ...previousState.data,\n          [name]: value,\n        },\n      }),\n      () => {\n        this.validateError(name);\n      }\n    );\n  };\n\n  validateError(fieldName) {\n    // console.log(this.state)\n    let err;\n    switch (fieldName) {\n      case \"email\":\n        err = this.state.data[fieldName]\n          ? this.state.data[fieldName].includes(\"@\")\n            ? { message: \"\", isTouched: true }\n            : { message: \"Invalid Email\", isTouched: false }\n          : { message: \"Email is required\", isTouched: true };\n        break;\n      case \"password\":\n        err = this.state.data[fieldName]\n          ? { message: \"\", isTouched: true }\n          : { message: \"password is required\", isTouched: false };\n        break;\n      default:\n        break;\n    }\n\n    this.setState(\n      (previousState) => ({\n        error: {\n          ...previousState.error,\n          [fieldName]: {\n            [\"msg\"]: err.message,\n            [\"isDirty\"]: err.isTouched,\n          },\n        },\n      }),\n      () => {\n        this.validateForm();\n      }\n    );\n  }\n\n  validateForm = () => {\n    let isValid =\n      this.state.error.email.isDirty && this.state.error.password.isDirty\n        ? true\n        : false;\n    this.setState({\n      isValidForm: isValid,\n    });\n  };\n\n  handleClick = (e) => {\n    e.preventDefault();\n    this.setState({\n      isSubmitting: true,\n    });\n\n    axios\n      .post(\"http://127.0.0.1:5000/login\", this.state.data)\n      .then((data) => {\n        notification.showSuccess(`welcome ${data.data.firstname}`);\n        localStorage.setItem(\"user\", JSON.stringify(data.data.firstname));\n        localStorage.setItem(\"token\", JSON.stringify(data.data.token));\n        localStorage.setItem(\"role\", JSON.stringify(data.data.role));\n\n        this.setState({\n          isSubmitting: false,\n        });\n        // console.log(data.data);\n\n        this.props.history.push(`/`);\n      })\n      .catch((err) => {\n        this.setState({\n          isSubmitting: false,\n        });\n        console.log(err);\n        notification.errorHandler(err);\n      });\n  };\n\n  render() {\n    let btn = this.state.isSubmitting ? (\n      <button disabled className=\"btn btn-info mb-3 mt-3\">\n        Logging...\n      </button>\n    ) : (\n      <button\n        className=\"btn btn-primary mb-3 mt-3\"\n        disabled={!this.state.isValidForm}\n      >\n        Login\n      </button>\n    );\n    return (\n      <>\n        <Header />\n        <div className=\"login\">\n          <div className=\"login-title\">Login</div>\n          <form onSubmit={this.handleClick}>\n            <div class=\"form-group mb-2\">\n              <label for=\"exampleInputEmail1\" className=\"input\">\n                Email address\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n                placeholder=\"Enter email\"\n                name=\"email\"\n                autoComplete=\"nope\"\n                onChange={this.handleChange}\n              />\n              <small id=\"emailHelp\" class=\"form-text text-danger\">\n                {this.state.error.email.msg}\n              </small>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"exampleInputPassword1\" className=\"input\">\n                Password\n              </label>\n\n              <input\n                type=\"password\"\n                class=\"form-control\"\n                id=\"exampleInputPassword1\"\n                placeholder=\"Password\"\n                name=\"password\"\n                autoComplete=\"nope\"\n                onChange={this.handleChange}\n              />\n              <small id=\"emailHelp\" class=\"form-text text-danger\">\n                {this.state.error.password.msg}\n              </small>\n            </div>\n\n            {btn}\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n","/home/ashok/Desktop/project7/seven/src/component/footer/footer.js",[],"/home/ashok/Desktop/project7/seven/src/component/register/register.js",[],"/home/ashok/Desktop/project7/seven/src/component/viewstock/viewstock.js",["81","82"],"import React from \"react\";\nimport Header from \"../header/header\";\nimport useApiHook from \"../../utils/apiHooks\";\nimport Loader from \"../../utils/loader\";\nimport \"./viewstock.css\";\nimport axios from \"axios\";\nimport notifications from \"../notification/notification\";\n\nfunction Viewstock({ history }) {\n  const { apiData, isLoading } = useApiHook();\n\n  const loadingData = isLoading ? (\n    <Loader />\n  ) : (\n    <div className=\"view-stock\">\n      <h2>Stock detail of Different companies</h2>\n      <Table data={apiData} history={history} />\n    </div>\n  );\n\n  return (\n    <>\n      <Header />\n      {loadingData}\n    </>\n  );\n}\n\nfunction Table({ data, history }) {\n  const handlePredict = (symbol) => {\n    history.push(`view-stock/predicted-stock/${symbol}`);\n  };\n\n  const handlePredictAdmin = (symbol) => {\n    console.log(\"symbol\", symbol);\n    axios\n      .get(`http://127.0.0.1:5000/predict-stock/${symbol}`)\n      .then((data) => notifications.showSuccess(data.data))\n      .catch((err) =>\n        notifications.showWarning(`could not predict. try again`)\n      );\n    notifications.showInfo(`Predicting the stock data of ${symbol}`);\n  };\n  return (\n    <table className=\"table table-striped\">\n      <thead className=\"thead-dark dark\">\n        <tr>\n          <th scope=\"col\">Symbol</th>\n          <th scope=\"col\">Open</th>\n          <th scope=\"col\">High</th>\n          <th scope=\"col\">Low</th>\n          <th scope=\"col\">Close</th>\n          <th scope=\"col\">Volume</th>\n          <th scope=\"col\">Company</th>\n          <th scope=\"col\">Predicted Close</th>\n          {localStorage.getItem(\"token\") &&\n            JSON.parse(localStorage.getItem(\"role\")) == 1 && (\n              <th scope=\"col\">Make Prediction</th>\n            )}\n        </tr>\n      </thead>\n      <tbody>\n        {data &&\n          data.map((item, i) => (\n            <tr key={i} className=\"item\">\n              <td>{item.symbol}</td>\n              <td>{item.Open}</td>\n              <td>{item.high}</td>\n              <td>{item.low}</td>\n              <td>{item.Close}</td>\n              <td>{item.Volume}</td>\n              <td>{item.company}</td>\n              <td>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-info\"\n                  onClick={() => handlePredict(item.symbol)}\n                >\n                  Observe\n                </button>\n              </td>\n              {localStorage.getItem(\"token\") &&\n                JSON.parse(localStorage.getItem(\"role\")) == 1 && (\n                  <td>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-danger\"\n                      onClick={() => handlePredictAdmin(item.symbol)}\n                    >\n                      Predict\n                    </button>\n                  </td>\n                )}\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Viewstock;\n","/home/ashok/Desktop/project7/seven/src/component/notification/notification.js",[],"/home/ashok/Desktop/project7/seven/src/utils/stockdata.js",[],"/home/ashok/Desktop/project7/seven/src/component/pagenotfound/pagenotfound.js",[],"/home/ashok/Desktop/project7/seven/src/component/predictedStock/predictedStock.js",[],"/home/ashok/Desktop/project7/seven/src/utils/loader.js",[],"/home/ashok/Desktop/project7/seven/src/utils/apiHooks.js",[],["83","84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":59,"column":9,"nodeType":"91","endLine":59,"endColumn":56},{"ruleId":"89","severity":1,"message":"90","line":78,"column":15,"nodeType":"91","endLine":78,"endColumn":39},{"ruleId":"89","severity":1,"message":"90","line":83,"column":15,"nodeType":"91","endLine":83,"endColumn":39},{"ruleId":"85","replacedBy":"92"},{"ruleId":"87","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":73,"column":13,"nodeType":"96","messageId":"97","endLine":73,"endColumn":33,"fix":"98"},{"ruleId":"94","severity":1,"message":"99","line":74,"column":13,"nodeType":"96","messageId":"97","endLine":74,"endColumn":39,"fix":"100"},{"ruleId":"101","severity":1,"message":"102","line":57,"column":54,"nodeType":"103","messageId":"104","endLine":57,"endColumn":56},{"ruleId":"101","severity":1,"message":"102","line":83,"column":58,"nodeType":"103","messageId":"104","endLine":83,"endColumn":60},{"ruleId":"85","replacedBy":"105"},{"ruleId":"87","replacedBy":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["107"],["108"],"no-useless-computed-key","Unnecessarily computed property [\"msg\"] found.","Property","unnecessarilyComputedProperty",{"range":"109","text":"110"},"Unnecessarily computed property [\"isDirty\"] found.",{"range":"111","text":"112"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["107"],["108"],"no-global-assign","no-unsafe-negation",[1659,1666],"\"msg\"",[1693,1704],"\"isDirty\""]